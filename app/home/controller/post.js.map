{
    "version": 3,
    "sources": [
        "../../../src/home/controller/post.js"
    ],
    "names": [
        "stats",
        "think",
        "promisify",
        "stat",
        "indexAction",
        "listAction",
        "model",
        "where",
        "tag",
        "get",
        "cate",
        "name",
        "find",
        "user",
        "isEmpty",
        "user_id",
        "id",
        "tagName",
        "cateName",
        "pathname",
        "statusAction",
        "http",
        "assign",
        "filter",
        "toLowerCase",
        "getPostList",
        "list",
        "data",
        "forEach",
        "post",
        "encodeURIComponent",
        "pagination",
        "posts",
        "displayView",
        "detailAction",
        "url",
        "decodeURIComponent",
        "getPostDetail",
        "detail",
        "redirect",
        "pageAction",
        "setRelation",
        "is_public",
        "type",
        "status",
        "template",
        "options",
        "JSON",
        "parse",
        "join",
        "THEME_VIEW_PATH",
        "sep",
        "slice",
        "console",
        "log",
        "archiveAction",
        "getPostArchive",
        "i",
        "map",
        "tagAction",
        "searchAction",
        "keyword",
        "trim",
        "postModel",
        "getPostSearch",
        "searchResult",
        "tagModel",
        "getHotTags",
        "hotTags"
    ],
    "mappings": "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",
    "file": "../../../src/home/controller/post.js",
    "sourcesContent": [
        "'use strict';\n\nimport fs from 'fs';\nimport path from 'path';\nimport Base from './base';\n\nconst stats = think.promisify(fs.stat);\n\n\nexport default class extends Base {\n  /**\n   * index action\n   * @return {[type]} [description]\n   */\n  indexAction() {\n    return this.listAction();\n  }\n  /**\n   * post list\n   * @return {Promise} []\n   */\n  async listAction() {\n    let model = this.model('post');\n    let where = {\n      tag: this.get('tag'),\n      cate: this.get('cate')\n    };\n    if(this.get('name')) {\n      let user = await this.model('user').where({name: this.get('name')}).find();\n      if(!think.isEmpty(user)) {\n        where.where = {user_id: user.id};\n      }\n    }\n\n    let tagName = '', cateName = '';\n    if(where.tag) {\n      tagName = await this.model('tag').where({pathname: where.tag}).find();\n      if(!think.isEmpty(tagName)) {\n        tagName = tagName.name;\n      } else {\n        return think.statusAction(404, this.http);\n      }\n    }\n    if(where.cate) {\n      [cateName] = this.assign('categories').filter(cate =>\n        cate.pathname.toLowerCase() === where.cate.toLowerCase()\n      );\n      if (cateName && cateName.name) {\n        cateName = cateName.name;\n      } else {\n        return think.statusAction(404, this.http);\n      }\n    }\n\n    let list = await model.getPostList(this.get('page'), where);\n    list.data.forEach(post => post.pathname = encodeURIComponent(post.pathname));\n    let {data, ...pagination} = list;\n    this.assign({\n      posts: data,\n      pagination,\n      tag: tagName,\n      cate: cateName,\n      pathname: where.tag || where.cate\n    });\n    return this.displayView('index');\n  }\n  /**\n   * post detail\n   * @return {[type]} [description]\n   */\n  async detailAction() {\n    this.http.url = decodeURIComponent(this.http.url);\n    let pathname = this.get('pathname');\n    if(pathname === 'list') { return this.listAction(); }\n\n    let detail = await this.model('post').getPostDetail(pathname);\n    if(think.isEmpty(detail)) {\n      return this.redirect('/');\n    }\n    detail.pathname = encodeURIComponent(detail.pathname);\n    this.assign('post', detail);\n\n    return this.displayView('post');\n  }\n\n  async pageAction() {\n    let pathname = this.get('pathname');\n    let detail = await this.model('post')\n      .setRelation(false)\n      .where({\n        pathname,\n        is_public: 1, //公开\n        type: 1, //文章\n        status: 3 //已经发布\n      })\n      .find();\n    detail.pathname = encodeURIComponent(detail.pathname);\n    this.assign('page', detail);\n    this.assign('pathname', pathname);\n\n    let template = 'page';\n    if(detail.options) {\n      try {\n        detail.options = JSON.parse(detail.options);\n        if(detail.options.template) {\n          /*let stat = */await stats(path.join(this.THEME_VIEW_PATH, 'template', detail.options.template));\n          template = `template${think.sep}`+detail.options.template.slice(0, -5);\n        }\n      } catch(e) {\n        console.log(e);  // eslint-disable-line no-console\n      }\n    }\n\n    return this.displayView(template);\n  }\n  /**\n   * post archive\n   * @return {[type]} [description]\n   */\n  async archiveAction() {\n    let model = this.model('post');\n    let data = await model.getPostArchive();\n    for(let i in data) { data[i].map(post => post.pathname = encodeURIComponent(post.pathname)) }\n    this.assign('list', data);\n    return this.displayView('archive');\n  }\n\n  async tagAction() {\n    return this.displayView('tag');\n  }\n  /**\n   * search action\n   * @return {[type]} [description]\n   */\n  async searchAction() {\n    let keyword = this.get('keyword').trim();\n    if(keyword) {\n      let postModel = this.model('post');\n      let searchResult = await postModel.getPostSearch(keyword, this.get('page'));\n      this.assign('searchData', searchResult);\n      this.assign('pagination', searchResult);\n    }\n\n    //热门标签\n    let tagModel = this.model('tag');\n    let hotTags = await tagModel.getHotTags();\n    this.assign('hotTags', hotTags);\n\n\n    this.assign('keyword', keyword);\n    return this.displayView('search');\n  }\n}\n"
    ]
}