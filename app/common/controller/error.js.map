{
    "version": 3,
    "sources": [
        "../../../src/common/controller/error.js"
    ],
    "names": [
        "stats",
        "think",
        "promisify",
        "stat",
        "displayError",
        "status",
        "env",
        "http",
        "error",
        "errorConfig",
        "config",
        "message",
        "isJsonp",
        "jsonp",
        "key",
        "msg",
        "isAjax",
        "fail",
        "module",
        "mode",
        "mode_module",
        "file",
        "model",
        "getOptions",
        "theme",
        "themeErrorFilePath",
        "join",
        "RESOURCE_PATH",
        "console",
        "log",
        "options",
        "extend",
        "type",
        "file_depr",
        "fetch",
        "then",
        "content",
        "replace",
        "content_type",
        "end",
        "_400Action",
        "_403Action",
        "_404Action",
        "controller",
        "invoke",
        "_500Action",
        "_503Action",
        "base"
    ],
    "mappings": "AAAA;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,QAAQC,MAAMC,SAAN,CAAgB,aAAGC,IAAnB,CAAd;AACA;;;;;;;;;;;;AAIE;;;;;mBAKMC,Y;2FAAaC,M;;;;;;;;;;AAEjB;AACA,kBAAGJ,MAAMK,GAAN,KAAc,YAAjB,EAA+B;AAC7B,qBAAKC,IAAL,CAAUC,KAAV,GAAkB,IAAlB;AACD;;AAEGC,yB,GAAc,KAAKC,MAAL,CAAY,OAAZ,C;AACdC,qB,GAAU,KAAKJ,IAAL,CAAUC,KAAV,IAAmB,KAAKD,IAAL,CAAUC,KAAV,CAAgBG,OAAnC,IAA8C,E;;mBACzD,KAAKC,OAAL,E;;;;;+CACM,KAAKC,KAAL,sBACJJ,YAAYK,GADR,IACcT,MADd,SAEJI,YAAYM,GAFR,IAEcJ,OAFd,U;;;mBAIA,KAAKK,MAAL,E;;;;;+CACA,KAAKC,IAAL,CAAUZ,MAAV,EAAkBM,OAAlB,C;;;AAGLO,oB,GAAS,Q;;AACb,kBAAGjB,MAAMkB,IAAN,KAAelB,MAAMmB,WAAxB,EAAqC;AACnCF,yBAAS,KAAKR,MAAL,CAAY,gBAAZ,CAAT;AACD;AACGW,kB,GAAUH,M,eAAgBb,M;;qBAEV,KAAKiB,KAAL,CAAW,SAAX,EAAsBC,UAAtB,E;;;;AAAfC,mB,SAAAA,K;AACDC,gC,GAAqB,eAAKC,IAAL,CAAUzB,MAAM0B,aAAhB,EAA+B,OAA/B,EAAwCH,KAAxC,EAA+C,OAA/C,EAA2DnB,MAA3D,W;;;qBAEjBL,MAAMyB,kBAAN,C;;;AACNJ,qBAAOI,kBAAP;;;;;;;;AAEAG,sBAAQC,GAAR,c,CAAiB;;;AAGfC,qB,GAAU,KAAKpB,MAAL,CAAY,KAAZ,C;;AACdoB,wBAAU7B,MAAM8B,MAAN,CAAa,EAAb,EAAiBD,OAAjB,EAA0B,EAACE,MAAM,MAAP,EAAeC,WAAW,GAA1B,EAA1B,CAAV;AACA,mBAAKC,KAAL,CAAWb,IAAX,EAAiB,EAAjB,EAAqBS,OAArB,EAA8BK,IAA9B,CAAmC,mBAAW;AAC5CC,0BAAUA,QAAQC,OAAR,CAAgB,eAAhB,EAAiC1B,OAAjC,CAAV;AACA,uBAAKqB,IAAL,CAAUF,QAAQQ,YAAlB;AACA,uBAAKC,GAAL,CAASH,OAAT;AACD,eAJD;;;;;;;;;;;;;;;;AAMF;;;;;;mBAIMI,U;;;;;;;qBACS,KAAKpC,YAAL,CAAkB,GAAlB,C;;;;;;;;;;;;;;;;;;;AAEf;;;;;;mBAIMqC,U;;;;;;;qBACS,KAAKrC,YAAL,CAAkB,GAAlB,C;;;;;;;;;;;;;;;;;;;AAEf;;;;;;mBAIMsC,U;;;;;;;oBAED,KAAKnC,IAAL,CAAUW,MAAV,KAAqB,OAArB,IAAgC,CAAC,KAAKF,MAAL,E;;;;;AAC9B2B,wB,GAAa,KAAKA,UAAL,CAAgB,YAAhB,C;;AACjB,mBAAKtC,MAAL,CAAY,GAAZ;gDACOsC,WAAWC,MAAX,CAAkB,QAAlB,C;;;;qBAEI,KAAKxC,YAAL,CAAkB,GAAlB,C;;;;;;;;;;;;;;;;;;;AAEf;;;;;;mBAIMyC,U;;;;;;;qBACS,KAAKzC,YAAL,CAAkB,GAAlB,C;;;;;;;;;;;;;;;;;;;AAEf;;;;;;mBAIM0C,U;;;;;;;qBACS,KAAK1C,YAAL,CAAkB,GAAlB,C;;;;;;;;;;;;;;;;;;;;;EAtFYH,MAAM0C,UAAN,CAAiBI,I",
    "file": "../../../src/common/controller/error.js",
    "sourcesContent": [
        "'use strict';\nimport fs from 'fs';\nimport path from 'path';\n\nconst stats = think.promisify(fs.stat);\n/**\n * error controller\n */\nexport default class extends think.controller.base {\n  /**\n   * display error page\n   * @param  {Number} status []\n   * @return {Promise}        []\n   */\n  async displayError(status) {\n\n    //hide error message on production env\n    if(think.env === 'production') {\n      this.http.error = null;\n    }\n\n    let errorConfig = this.config('error');\n    let message = this.http.error && this.http.error.message || '';\n    if(this.isJsonp()) {\n      return this.jsonp({\n        [errorConfig.key]: status,\n        [errorConfig.msg]: message\n      })\n    }else if(this.isAjax()) {\n      return this.fail(status, message);\n    }\n\n    let module = 'common';\n    if(think.mode !== think.mode_module) {\n      module = this.config('default_module');\n    }\n    let file = `${module}/error/${status}.html`;\n\n    let {theme} = await this.model('options').getOptions();\n    let themeErrorFilePath = path.join(think.RESOURCE_PATH, 'theme', theme, 'error', `${status}.html`);\n    try {\n      await stats(themeErrorFilePath);\n      file = themeErrorFilePath;\n    } catch(e) {\n      console.log(e);  // eslint-disable-line no-console\n    }\n\n    let options = this.config('tpl');\n    options = think.extend({}, options, {type: 'base', file_depr: '_'});\n    this.fetch(file, {}, options).then(content => {\n      content = content.replace('ERROR_MESSAGE', message);\n      this.type(options.content_type);\n      this.end(content);\n    });\n  }\n  /**\n   * Bad Request\n   * @return {Promise} []\n   */\n  async _400Action() {\n    return await this.displayError(400);\n  }\n  /**\n   * Forbidden\n   * @return {Promise} []\n   */\n  async _403Action() {\n    return await this.displayError(403);\n  }\n  /**\n   * Not Found\n   * @return {Promise}      []\n   */\n  async _404Action() {\n    //管理端\n    if(this.http.module === 'admin' && !this.isAjax()) {\n      let controller = this.controller('admin/base');\n      this.status(200);\n      return controller.invoke('__call');\n    }\n    return await this.displayError(404);\n  }\n  /**\n   * Internal Server Error\n   * @return {Promise}      []\n   */\n  async _500Action() {\n    return await this.displayError(500);\n  }\n  /**\n   * Service Unavailable\n   * @return {Promise}      []\n   */\n  async _503Action() {\n    return await this.displayError(503);\n  }\n}\n"
    ]
}