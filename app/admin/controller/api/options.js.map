{
    "version": 3,
    "sources": [
        "../../../../src/admin/controller/api/options.js"
    ],
    "names": [
        "getAction",
        "type",
        "get",
        "model",
        "getOptions",
        "options",
        "two_factor_auth",
        "length",
        "success",
        "otpauth_url",
        "secret",
        "generateSecret",
        "name",
        "base32",
        "getPushSites",
        "push_sites",
        "result",
        "defaultCategory",
        "postAction",
        "data",
        "post",
        "verified",
        "totp",
        "verify",
        "encoding",
        "token",
        "code",
        "window",
        "fail",
        "setPushSites",
        "appKey",
        "putAction",
        "think",
        "isEmpty",
        "id",
        "site",
        "updateOptions",
        "deleteAction",
        "key",
        "hasOwnProperty",
        "url",
        "appSecret",
        "authorize",
        "errno",
        "errmsg"
    ],
    "mappings": "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",
    "file": "../../../../src/admin/controller/api/options.js",
    "sourcesContent": [
        "'use strict';\n\nimport speakeasy from 'speakeasy';\nimport push2Firekylin from 'push-to-firekylin';\nimport Base from './base';\n\nexport default class extends Base {\n  /**\n   * 获取\n   * @return {[type]} [description]\n   */\n  async getAction() {\n    let type = this.get('type');\n    let model = this.model('options');\n    let options = await model.getOptions();\n\n    if(type === '2fa') {\n      if(options.two_factor_auth.length === 32) {\n        return this.success({\n          otpauth_url: 'otpauth://totp/firekylin?secret=' + options.two_factor_auth,\n          secret: options.two_factor_auth\n        })\n      }else{\n        let secret = speakeasy.generateSecret({\n          length: 20,\n          name: 'firekylin'\n        });\n        return this.success({\n          otpauth_url: secret.otpauth_url,\n          secret: secret.base32\n        });\n      }\n    } else if(type === 'push') {\n      let push_sites = await this.getPushSites();\n      let result = this.get('key') ? push_sites[this.get('key')] : Object.values(push_sites);\n      return this.success(result);\n    } else if(type === 'defaultCategory') {\n      return this.success(options.defaultCategory || '');\n    }\n    return this.success();\n  }\n\n  postAction() {\n    let type = this.get('type');\n    if(type === '2faAuth') {\n      let data = this.post();\n      let verified = speakeasy.totp.verify({\n        secret: data.secret,\n        encoding: 'base32',\n        token: data.code,\n        window: 2\n      });\n      return verified ? this.success() : this.fail('TWO_FACTOR_AUTH_ERROR_DETAIL');\n    } else if(type === 'push') {\n      let data = this.post();\n      return this.setPushSites(data.appKey, data);\n    }\n    return super.postAction(this);\n  }\n  /**\n   * 更新选项\n   * @return {[type]} [description]\n   */\n  async putAction() {\n    let type = this.get('type');\n    let data = this.post();\n    if(think.isEmpty(data)) {\n      return this.fail('DATA_EMPTY');\n    }\n\n    let model = this.model('options');\n    if(type === 'push') {\n      let {id, ...site} = data;\n      return this.setPushSites(id, site);\n    } else if(type === 'defaultCategory') {\n      let result = await model.updateOptions('defaultCategory', data.id);\n      this.success(result);\n    } else {\n      let result = await model.updateOptions(data);\n      this.success(result);\n    }\n  }\n\n  async deleteAction() {\n    let type = this.get('type');\n    if(type === 'push') {\n      let key = this.get('key');\n      if(think.isEmpty(key)) {\n        return this.fail('KEY_EMPTY');\n      }\n      return this.setPushSites(key, null);\n    } else {\n      return super.deleteAction();\n    }\n  }\n\n  async getPushSites() {\n    let options = await this.model('options').getOptions();\n    return options.push_sites || {};\n  }\n\n  async setPushSites(key, data) {\n    let push_sites = await this.getPushSites();\n\n    /** 新添加的 push_sites 要校验唯一性 **/\n    if(!key && push_sites.hasOwnProperty(data.appKey)) {\n      return this.fail('KEY_EXIST');\n    }\n\n    /** 无论修改还是删除都把原来的删除掉 **/\n    if(key) {\n      delete push_sites[key];\n    }\n\n    /** 无论是新增还是修改先将新的数据添加进去 **/\n    if(data) {\n      /** 需要增加验证 key 正确性的请求 **/\n      let {url, appKey, appSecret} = data;\n      let result = await (new push2Firekylin(url, appKey, appSecret)).authorize();\n      if(result.errno) {\n        return this.fail('APP_KEY_SECRET_ERROR', result.errmsg);\n      }\n      push_sites[data.appKey] = data;\n    }\n\n    let result = await this.model('options')\n      .updateOptions('push_sites', JSON.stringify(push_sites));\n    return this.success(result);\n  }\n}\n"
    ]
}